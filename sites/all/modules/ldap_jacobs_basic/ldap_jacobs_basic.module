<?php

/**
 *	Implementation of hook_form_alter().
 *	Change the normal login form behavior.
 **/

function ldap_jacobs_basic_form_alter( &$form, $form_state, $form_id ){
	if($form_id == 'user_login_block' || $form_id == 'user_login' ){
		$form['#validate'] = array( 'user_login_name_validate', 'user_login_authenticate_validate', 'ldap_jacobs_basic_login_validate', 'user_login_final_validate' );
	}

	if ($form_id == 'user_profile_form') {
	    $form["field_full_name"]["#access"] = FALSE; 
	    $form["account"]["name"]["#access"] = FALSE;
	    $form["account"]["status"]["#access"] = FALSE;
	   	$form["account"]["roles"]["#access"] = FALSE;
	   	$form["og_user_node"]["#access"] = FALSE;
	   	$form['account']['mail']['#disabled'] = TRUE;
	    $form["field_matric_no"]["#access"] = FALSE; 

		$user_obj = $form["#user"];

		if ($user_obj->name == $user_obj->init){
			$form["account"]["pass"]["#disabled"] = TRUE;
			$form["account"]["current_pass"]["#disabled"] = TRUE;
		}

	  }


}




/**
 * The function that checks if the credentials are valid and correct
 *
 */

function ldap_jacobs_basic_check_user($username, $password){
		$r = new LdapSearch;
		$r->connect();

		$user = user_load_by_name($username);
		if($user && ($user->name != $user->init)){
			return false;
		}
		else{
			if ($r->bind($username, $password)) drupal_set_message(t("LDAP login!"));
			return ($r->bind($username, $password));
		}

}


/**
 *	The ldap_jacobs_auth() function attempts to authenticate a user off the external system using their e-mail address
 *
 **/

function ldap_jacobs_basic_login_validate( $form, &$form_state){
	$username = strtolower($form_state['values']['name']);
	$account_initial = user_external_load($username);
	$response = ldap_jacobs_basic_check_user($username, $form_state['values']['pass'] );
	if ($response != false){
		user_external_login_register($username, 'ldap_jacobs_basic');
		$account = user_external_load($username);
		$form_state['uid'] = $account->uid;

		$user = user_load_by_name($username);

		if(!$account_initial){
			// * Collecting LDAP data
			$ldap_username = variable_get('ldap_username');
			$ldap_password = variable_get('ldap_password');
				
			$ldap = new LdapSearch;
			$ldap->connect();
			if(!$ldap->bind($ldap_username, $ldap_password)){
				drupal_set_message(t("Could not connect to LDAP! Please contact the administrator!"), 'error');
				return;
			}


			$ldap_user = $ldap->getByUsername($username);

	

			$up_fullname = array("und" => array("0" => array("value" => $ldap_user["firstname"]." ".$ldap_user["lastname"])));
			$up_matricno = array("und" => array("0" => array("value" => $ldap_user["matric_no"])));

			$updated_user = array(
				"field_full_name" => $up_fullname,
				"mail" => $ldap_user["email"],
				"field_matric_no" => $up_matricno,
			);
			$user = user_save($user,$updated_user);



		}
	}

}










?>